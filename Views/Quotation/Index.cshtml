@model IEnumerable<QuotationViewModel>
@{
	ViewData["Title"] = "Quotations";
}
<html>
<head>
	<style>
		html {
			font-size: 14px;
			font-family: Arial, Helvetica, sans-serif;
		}</style>
	<title></title>
	<link href="https://kendo.cdn.telerik.com/themes/6.4.0/default/default-main.css" rel="stylesheet" />
	<script src="https://kendo.cdn.telerik.com/2023.2.606/js/jquery.min.js"></script>
	<script src="https://kendo.cdn.telerik.com/2023.2.606/js/kendo.all.min.js"></script>
</head>
<body>
	<div>
		<div>
			<label for="datetimepickerFrom">Search By Quotation Date Range: From </label>
			<input id="datetimepickerFrom" title="datetimepickerFrom" class="datePicker" />
			<label for="datetimepickerTo"> To </label>
			<input id="datetimepickerTo" title="datetimepickerTo" class="datePicker" />
			<button id="btnSearch">Search</button>
			<button id="btnClear">Clear Search Filter</button>
		</div>
	</div>
	<br />
	<div id="techtest">
		<div id="grid"></div>
		<script>
			$(document).ready(function () {
				dataSource = new kendo.data.DataSource({
					transport: {
						read: {
							url: "Quotation/Read",
							dataType: "json",
							type: "get"
						},
						//create: {
						//	url: "Quotation/Create",
						//	dataType: "json",
						//	contentType: "application/json; charset=utf-8",
						//	type: "post"
						//},
						update: {
							url: "Quotation/Update",
							dataType: "json",
							contentType: "application/json; charset=utf-8",
							type: "post",
							complete: function (e) { $("#grid").data("kendoGrid").dataSource.read(); }
						},
						parameterMap: function (options, operation) {
							if (operation !== "read" && options.models) {
								return kendo.stringify(options.models)
							}
						}
					},
					batch: true,
					pageSize: 10,
					autoSync: true,
					schema: {
						model: {
							id: "quotationNo",
							fields: {
								quotationNo: { editable: false, nullable: false },
								quotationDate: { type: "date", editable: true },
								customerId: { editable: true, nullable: false },
								customerName: { editable: false, nullable: false },
								//subject: { editable: true, nullable: true },
								//description: { editable: true, nullable: true },
								status: { editable: true },
								value: { editable: false },
								prodCode: { editable: true, nullable: false },
								prodName: { editable: false, nullable: false },
								//price: { editable: true, nullable: false },
								qty: { editable: true, nullable: false },
								//amount: { editable: true, nullable: false }
							}
						}
					}
				});

				var grid = $("#grid").kendoGrid({
					dataSource: dataSource,
					columnMenu: {
						filterable: false
					},
					height: window.innerHeight - 300,
					width: window.innerWidth - 25,
					//serverPaging: true,
					//serverFiltering: true,
					editable: true,
					dataBound: function (e) {
						$('.k-grid-add').unbind("click");

						$('.k-grid-add').bind("click", function (e) {
							var grid = $("#grid").data("kendoGrid");
							if (grid) {
								var dataSource = grid.dataSource;
								const quotationItem = dataSource.get(1);
								if(quotationItem){
									var newQuotation = {
										quotationNo: 0,
										quotationDate: new Date(),
										customerId: quotationItem.customerId,
										customerName: quotationItem.customerName,
										//subject: quotationItem.subject,
										//description: quotationItem.description,
										status: quotationItem.status,
										value: quotationItem.value,
										prodCode: quotationItem.prodCode,
										prodName: quotationItem.prodName,
										//price: quotationItem.price,
										qty: quotationItem.qty,
										//amount: quotationItem.amount
									};
									//dataSource.add(newQuotation);
									dataSource.insert(0, newQuotation);
								}
							}
						});
					},
					pageable: true,
					toolbar: ["create", "excel", "pdf", "search"],
					search: {
						fields: [
							{ name: "quotationNo", operator: "eq" },
							//{ name: "price", operator: "gte" },
							{ name: "customerName", operator: "contains" },
							{ name: "prodName", operator: "contains" },
						]
					},
					pdf: {
						allPages: true,
						avoidLinks: true,
						paperSize: "A4",
						margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
						landscape: true,
						repeatHeaders: true,
						template: $("#page-template").html(),
						scale: 0.8
					},
					columns: [
						{ field: "quotationNo", title: "Number" },
						{ field: "quotationDate", title: "Date", template: "#= kendo.toString(quotationDate,'MM/dd/yyyy') #" },
						{ field: "customerId", title: "Customer Id", editor: customerIdEditor },
						{ field: "customerName", title: "Customer Name" }, //, editor: customerNameEditor
						//{ field: "subject", title: "Subject" },
						//{ field: "description", title: "Description" },
						{ field: "status", title: "Status" },
						{ field: "value", title: "Value" },
						{ field: "prodCode", title: "Product Code", editor: productCodeEditor },
						{ field: "prodName", title: "Product Name" }, // , editor: productNameEditor
						//{ field: "price", title: "Price", editor: productPriceEditor },
						{ field: "qty", title: "Quantity" },
						//{ field: "amount", title: "Amount" },
						//{ command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }
					],
				});

				$("#datetimepickerFrom").kendoDateTimePicker({
					value: new Date(),
					dateInput: true,
					startTime: new Date(2023, 1, 3, 8, 30, 0),
					endTime: new Date(2023, 1, 3, 17, 00, 0)
				});

				$("#datetimepickerTo").kendoDateTimePicker({
					value: new Date(),
					dateInput: true,
					startTime: new Date(2023, 1, 3, 8, 30, 0),
					endTime: new Date(2023, 1, 3, 17, 00, 0)
				});

				$("#btnSearch").kendoButton({
					click: onSearch
				});

				$("#btnClear").kendoButton({
					click: onClear
				});				
			});

			function dateTimeEditor2(container, options) {
				$('<input type="text" />')
					.appendTo(container)
					.kendoDateTimePicker({
						format: "MM/dd/yyyy hh:mm",
						value: kendo.toString(new Date(options.model.quotationDate), 'MM/dd/yyyy hh:mm')
					});
			}

			function customerIdEditor(container, options) {
				$('<input required name="customerId">')
					.appendTo(container)
					.kendoDropDownList({
						dataTextField: "customerId",
						dataValueField: "customerId",
						dataSource: {
							transport: {
								read: {
									url: "Customer/Read",
									dataType: "json",
									type: "get"
								}
							}
						}
					});
			}

			function customerNameEditor(container, options) {
				$('<input name="customerName">')
					.appendTo(container)
					.kendoDropDownList({
						dataTextField: "customerName",
						dataValueField: "customerName",
						dataSource: {
							transport: {
								read: {
									url: "Customer/Read",
									dataType: "json",
									type: "get"
								}
							}
						}
					});
			}

			function productCodeEditor(container, options) {
				$('<input required name="prodCode">')
					.appendTo(container)
					.kendoDropDownList({
						dataTextField: "prodCode",
						dataValueField: "prodCode",
						dataSource: {
							transport: {
								read: {
									url: "Product/Read",
									dataType: "json",
									type: "get"
								}
							}
						}
					});
			}

			function productNameEditor(container, options) {
				$('<input name="prodName">')
					.appendTo(container)
					.kendoDropDownList({
						dataTextField: "prodName",
						dataValueField: "prodName",
						dataSource: {
							transport: {
								read: {
									url: "Product/Read",
									dataType: "json",
									type: "get"
								}
							}
						}
					});
			}

			function productPriceEditor(container, options) {
				$('<input name="price">')
					.appendTo(container)
					.kendoDropDownList({
						dataTextField: "price",
						dataValueField: "price",
						dataSource: {
							transport: {
								read: {
									url: "Product/Read",
									dataType: "json",
									type: "get"
								}
							}
						}
					});
			}

			function onSearch() {
				var from = kendo.toString($("#datetimepickerFrom").val(), 'MM/dd/yyyy hh:mm');
				var to = kendo.toString($("#datetimepickerTo").val(), 'MM/dd/yyyy hh:mm');
				$.ajax({
					url: "Quotation/SearchQuotationsByDate",
					type: "POST",
					data: JSON.stringify({ 'FromDate': from, 'ToDate': to }),
					dataType: "json",
					traditional: true,
					contentType: "application/json; charset=utf-8",
					success: function (data) {
						if(data && data.length > 0)
						{
							var grid = $("#grid").data("kendoGrid");
							if (grid) {
									grid.dataSource.query({
										page: 1,
										pageSize: 20,
										filter: {
											logic: "or",
											filters: [{ 
												field: "quotationNo", operator: function (item) { return data.includes(item); }
											}]
										}
									});
							}
						} else {
							alert("Unable to find quotations in date range");
						}
					},
					error: function () {
						alert("An error has occured while searching quotations !!!");
					}
				});
			}

			function onClear() {
				var grid = $("#grid").data("kendoGrid");
				if (grid) {
					grid.dataSource.filter([]);
				}
			}

		</script>

		<style type="text/css">
			.container {
				float: left !important;
			}

			.datePicker {
				width: auto !important;
			}
		</style>
	</div>
</body>
</html>