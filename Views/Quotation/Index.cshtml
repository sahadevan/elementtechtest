@model IEnumerable<ElementMaterialsTechnology.Models.QuotationViewModel>
@{
	ViewData["Title"] = "Quotations";
}

<div id="techtest">
	<div id="grid"></div>
	<script>
		$(document).ready(function () {
				dataSource = new kendo.data.DataSource({
					transport: {
						read: {
							url: "Quotation/Read",
							dataType: "json",
							type: "get"
						},
						create: {
							url: "Quotation/Create",
							dataType: "json",
						    contentType: "application/json; charset=utf-8",
							type: "post"
						},
						update: {
							url: "Quotation/Update",
							dataType: "json",
						    contentType: "application/json; charset=utf-8",
							type: "post",
						    complete: function (e) { $("#grid").data("kendoGrid").dataSource.read(); }
						},
						parameterMap: function (options, operation) {
							if (operation !== "read" && options.models) {
							return kendo.stringify(options.models)
							}
						}
					},
					batch: true,
					pageSize: 10,
					autoSync: true,
					schema: {
						model: {
						id: "quotationNo",
						fields: {
							quotationNo: { editable: false, nullable: false },
							quotationDate: { type: "date", editable: true },
							customerId: { editable: true, nullable: false },
							customerName: { editable: true, nullable: false },
							subject: { editable: true, nullable: true },
							description: { editable: true, nullable: true },
							status: { editable: true },
							value: { editable: true },
							prodCode: { editable: true, nullable: false },
							prodName: { editable: true, nullable: false },
							price: { editable: true, nullable: false },
							qty: { editable: true, nullable: false },
							amount: { editable: true, nullable: false }
							}
						}
					}
				});

			$("#grid").kendoGrid({
				dataSource: dataSource,
					columnMenu: {
						filterable: false
					},
					height: window.innerHeight - 150,
					width: window.innerWidth - 25,
					editable: "inline",
					pageable: true,
					toolbar: ["create", "excel", "pdf", "search"],
					search: {
						fields: [
						{ name: "quotationNo", operator: "eq" },
						{ name: "price", operator: "gte" },
						{ name: "customerName", operator: "contains" },
						{ name: "prodName", operator: "contains" },
						]
					},
					pdf: {
						allPages: true,
						avoidLinks: true,
						paperSize: "A4",
						margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
						landscape: true,
						repeatHeaders: true,
						template: $("#page-template").html(),
						scale: 0.8
					},
					columns: [
						{ field: "quotationNo", title: "Number" },
						{ field: "quotationDate", title: "Date", template: "#= kendo.toString(quotationDate,'MM/dd/yyyy') #" },
						{ field: "customerId", title: "Customer Id", editor: customerIdEditor },
						{ field: "customerName", title: "Customer Name", editor: customerNameEditor },
						{ field: "subject", title: "Subject" },
						{ field: "description", title: "Description" },
						{ field: "status", title: "Status" },
						{ field: "value", title: "Value" },
						{ field: "prodCode", title: "Product Code", editor: productCodeEditor },
						{ field: "prodName", title: "Product Name", editor: productNameEditor },
						{ field: "price", title: "Price", editor: productPriceEditor },
						{ field: "qty", title: "Quantity" },
						{ field: "amount", title: "Amount" },
						{ command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }
					],
			});
		});

		function dateTimeEditor2(container, options) {
			$('<input type="text" />')
				.appendTo(container)
				.kendoDateTimePicker({
					format: "MM/dd/yyyy hh:mm",
					value: kendo.toString(new Date(options.model.quotationDate), 'MM/dd/yyyy hh:mm')
				});
		}

		function customerIdEditor(container, options) {
			$('<input required name="customerId">')
				.appendTo(container)
				.kendoDropDownList({
					dataTextField: "customerId",
					dataValueField: "customerId",
					dataSource: {
						transport: {
							read: {
								url: "Customer/Read",
								dataType: "json",
								type: "get"
							}
						}
					}				
				});				
		}

		function customerNameEditor(container, options) {
			$('<input name="customerName">')
				.appendTo(container)
				.kendoDropDownList({
					dataTextField: "customerName",
					dataValueField: "customerName",
					dataSource: {
						transport: {
							read: {
								url: "Customer/Read",
								dataType: "json",
								type: "get"
							}
						}
					}
				});
		}

		function productCodeEditor(container, options) {
			$('<input required name="prodCode">')
				.appendTo(container)
				.kendoDropDownList({
					dataTextField: "prodCode",
					dataValueField: "prodCode",
					dataSource: {
						transport: {
							read: {
								url: "Product/Read",
								dataType: "json",
								type: "get"
							}
						}
					}
				});
		}

		function productNameEditor(container, options) {
			$('<input name="prodName">')
				.appendTo(container)
				.kendoDropDownList({
					dataTextField: "prodName",
					dataValueField: "prodName",
					dataSource: {
						transport: {
							read: {
								url: "Product/Read",
								dataType: "json",
								type: "get"
							}
						}
					}
				});
		}

		function productPriceEditor(container, options) {
			$('<input name="price">')
				.appendTo(container)
				.kendoDropDownList({
					dataTextField: "price",
					dataValueField: "price",
					dataSource: {
						transport: {
							read: {
								url: "Product/Read",
								dataType: "json",
								type: "get"
							}
						}
					}
				});
		}

	</script>

	<style type="text/css">
		.container { float: left !important; }
	</style>
</div>
